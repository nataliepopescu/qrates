initSidebarItems({"enum":[["ProgressStyle",""]],"fn":[["elapsed",""],["existing_vcs_repo",""],["is_ci","Whether or not this running in a Continuous Integration environment."],["print_available_benches",""],["print_available_binaries",""],["print_available_examples",""],["print_available_tests",""],["read2",""],["validate_package_name","Check the base requirements for a package name."]],"mod":[["command_prelude",""],["config",""],["cpu",""],["diagnostic_server","A small TCP server to handle collection of diagnostics information in a cross-platform way for the `cargo fix` command."],["errors",""],["graph",""],["hex",""],["important_paths",""],["into_url",""],["job","Job management (mostly for windows)"],["lev_distance",""],["machine_message",""],["network",""],["paths",""],["process_builder",""],["profile",""],["rustc",""],["to_semver",""],["toml",""]],"struct":[["CanonicalUrl","A newtype wrapper around `Url` which represents a \"canonical\" version of an original URL."],["DependencyQueue",""],["FileLock",""],["Filesystem","A \"filesystem\" is intended to be a globally shared, hence locked, resource in Cargo."],["FossilRepo",""],["GitRepo",""],["HgRepo",""],["LockServer",""],["LockServerClient",""],["LockServerStarted",""],["PijulRepo",""],["Progress",""],["Sha256",""]],"trait":[["IntoUrlWithBase","A type that can be interpreted as a relative Url and converted to a Url."]]});