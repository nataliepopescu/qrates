initSidebarItems({"enum":[["GitReference","Information to find a specific commit in a Git repository."],["ResolveVersion","A version to indicate how a `Cargo.lock` should be serialized. Currently V1 is the default and dates back to the origins of Cargo. A V2 is currently being proposed which provides a much more compact representation of dependency edges and also moves checksums out of `[metadata]`."],["WorkspaceConfig","Configuration of a workspace in a manifest."]],"mod":[["compiler",""],["dependency",""],["features","Support for nightly features in Cargo itself."],["manifest",""],["package",""],["package_id",""],["profiles",""],["registry",""],["resolver","Resolution of the entire dependency graph for a crate."],["shell",""],["source",""],["summary",""]],"struct":[["InternedString",""],["Members","An iterator over the member packages of a workspace, returned by `Workspace::members`"],["PackageIdSpec","Some or all of the data required to identify a package:"],["Resolve","Represents a fully-resolved package dependency graph. Each node in the graph is a package and edges represent dependencies between packages."],["SourceId","Unique identifier for a source of packages."],["Workspace","The core abstraction in Cargo for working with a workspace of crates."],["WorkspaceRootConfig","Intermediate configuration of a workspace root in a manifest."]]});