initSidebarItems({"enum":[["CompileKind","Indicator for how a unit is being compiled."],["CompileMode","The general \"mode\" for what to do. This is used for two purposes. The commands themselves pass this in to `compile_ws` to tell it the general execution strategy. This influences the default targets selected. The other use is in the `Unit` struct to indicate what is being done with a specific target."],["FileFlavor","Kind of each file generated by a Unit, part of `FileType`."],["Freshness","Indication of the freshness of a package."],["MessageFormat",""],["ProfileKind",""]],"fn":[["is_bad_artifact_name",""]],"mod":[["standard_lib","Code for building the standard library."],["unit_dependencies","Constructs the dependency graph for compilation."]],"struct":[["BuildConfig","Configuration information for a rustc build."],["BuildContext","The build context, containing all information about a build task."],["BuildOutput","Contains the parsed output of a custom build script."],["BuildScripts","Linking information for a `Unit`."],["Compilation","A structure returning the result of a compilation."],["CompileTarget","Abstraction for the representation of a compilation target that Cargo has."],["Context","Collection of all the stuff that is needed to perform a build."],["DefaultExecutor","A `DefaultExecutor` calls rustc without doing anything else. It is Cargo's default behaviour."],["Doctest",""],["TargetConfig","Information required to build for a target."],["TargetInfo","Information about the platform target gleaned from querying rustc."],["Unit","All information needed to define a unit."],["UnitInterner","A small structure used to \"intern\" `Unit` values."]],"trait":[["Executor","A glorified callback for executing calls to rustc. Rather than calling rustc directly, we'll use an `Executor`, giving clients an opportunity to intercept the build calls."]],"type":[["BuildScriptOutputs","Map of packages to build script output."]]});